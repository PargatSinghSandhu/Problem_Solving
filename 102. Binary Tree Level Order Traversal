/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        queue<TreeNode*> que;
        vector<vector<int>>ans;
        level(que, ans, root);
        return ans;

        
    }

    void level(queue<TreeNode*> que,vector<vector<int>>&ans,TreeNode* root)
    {
        que.push(root);
        
        if(root==NULL)
        {
            return;
        }
        while(!que.empty())
        {   
            int n = que.size();
            vector<int>ds;
            for(int i=0;i<n;i++)
            {
                TreeNode* node = que.front();
                que.pop();

                if(node->left!=NULL)
                {
                    que.push(node->left);
                }
                if(node->right!=NULL)
                {
                    que.push(node->right);
                }
                ds.push_back(node->val);
            }
            ans.push_back(ds);
        }
        
    }
};
